bookstore{
  include "credit"
  
  akka {
    loglevel = INFO
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    persistence{
      journal.plugin = "cassandra-journal"            
      snapshot-store.plugin = "cassandra-snapshot-store"
    }
            
    actor{
      serializers{
        json = "com.packt.masteringakka.bookstore.common.JsonSerializer"
        proto = "akka.remote.serialization.ProtobufSerializer"
      }
      serialization-bindings {
        "com.google.protobuf.Message" = proto
        "com.packt.masteringakka.bookstore.common.EntityFieldsObject" = json
      }      
    }
  }

  serviceBoots = ["Inventory", "Credit", "User", "Order"]
  
  cassandra-journal{
    event-adapters{
      proto = "com.packt.masteringakka.bookstore.common.ProtobufDatamodelAdapter"
    }
    
    event-adapter-bindings{
      "com.packt.masteringakka.bookstore.common.EntityEvent" = proto
      "com.google.protobuf.Message" = proto
    }
  }
  
  psqldb{
    numThreads = 10
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/akkaexampleapp"
    user = "root"
    password = ""
    connectionTestQuery = "select 1"
  } 
}
