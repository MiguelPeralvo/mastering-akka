2016-04-14 16:05:10,189 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 16:05:10,197 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 16:05:10,212 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 16:05:10,213 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 16:05:10,214 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 16:05:10,215 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 16:05:10,217 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 16:05:10,282 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 16:05:10,355 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:05:10,468 [Bookstore-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 16:05:10,573 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 16:05:10,575 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 16:05:10,575 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 16:05:10,581 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 16:05:10,586 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 16:05:10,595 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 16:05:10,595 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 16:05:10,595 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 16:05:10,596 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 16:05:10,614 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 16:05:10,614 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 16:05:10,614 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 16:05:10,614 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 16:05:10,615 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 16:05:10,619 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 16:05:10,619 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 16:05:10,619 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 16:05:10,619 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 16:05:10,633 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 16:05:10,633 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 16:05:10,660 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x815d1337e3c31385 (took 1 ms)
2016-04-14 16:05:10,689 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 16:05:10,689 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 16:05:10,690 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 16:05:10,691 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 16:05:38,877 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 16:05:38,892 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 16:05:38,899 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 16:05:38,904 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 16:05:38,946 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?]
2016-04-14 16:05:38,961 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?
2016-04-14 16:05:38,963 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 16:05:38,976 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 16:05:38,996 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 16:05:38,996 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 16:05:38,996 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 16:05:38,996 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 16:05:38,996 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | Chris     | Baxter   | chris@changedemai... | 2016-04-13 00:00:... | 2016-04-13 00:00:... |
2016-04-14 16:05:38,996 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
2016-04-14 16:05:40,232 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:05:40,232 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:05:52,234 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?]
2016-04-14 16:05:52,234 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?
2016-04-14 16:05:52,237 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 1ms
2016-04-14 16:05:52,238 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 16:05:52,238 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 16:05:52,238 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 16:05:52,238 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 16:05:52,238 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | Chris     | Baxter   | chris@changedemai... | 2016-04-13 00:00:... | 2016-04-13 00:00:... |
2016-04-14 16:05:52,238 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
2016-04-14 16:06:02,860 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?]
2016-04-14 16:06:02,861 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?
2016-04-14 16:06:02,862 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 381µs
2016-04-14 16:06:02,863 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 16:06:02,863 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 16:06:02,863 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 16:06:02,863 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 16:06:02,863 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1  | Chris     | Baxter   | chris@changedemai... | 2016-04-13 00:00:... | 2016-04-13 00:00:... |
2016-04-14 16:06:02,863 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
2016-04-14 16:06:10,230 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:06:10,230 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:06:40,228 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:06:40,229 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:07:10,228 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:07:10,228 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:07:40,227 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:07:40,227 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:08:10,226 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:08:10,226 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:08:40,224 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:08:40,224 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:09:10,223 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:09:10,223 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:09:40,222 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:09:40,223 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:10:10,222 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:10:10,222 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:10:40,219 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:10:40,219 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:11:10,219 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:11:10,219 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:11:40,218 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:11:40,218 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:12:10,217 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:12:10,218 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:12:40,216 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:12:40,216 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:13:10,215 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:13:10,215 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:13:27,873 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 16:13:27,881 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 16:13:27,899 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 16:13:27,899 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 16:13:27,899 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 16:13:27,899 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 16:13:27,900 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 16:13:27,901 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 16:13:27,902 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 16:13:27,903 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 16:13:27,964 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 16:13:28,038 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:13:28,150 [Bookstore-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 16:13:28,234 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 16:13:28,236 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 16:13:28,236 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 16:13:28,238 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 16:13:28,241 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 16:13:28,247 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 16:13:28,247 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 16:13:28,248 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 16:13:28,248 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 16:13:28,266 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 16:13:28,266 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 16:13:28,266 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 16:13:28,266 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 16:13:28,266 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 16:13:28,270 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 16:13:28,270 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 16:13:28,270 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 16:13:28,270 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 16:13:28,282 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 16:13:28,282 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 16:13:28,303 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x26a1a761268faae6 (took 1 ms)
2016-04-14 16:13:28,328 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 16:13:28,328 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 16:13:28,330 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 16:13:28,330 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 16:13:44,592 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 16:13:44,605 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 16:13:44,611 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 16:13:44,616 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 16:13:44,656 [Bookstore-akka.actor.default-dispatcher-4] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (1) group by b.id]
2016-04-14 16:13:44,666 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (1) group by b.id
2016-04-14 16:13:44,668 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 16:13:44,677 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 16:13:44,697 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 16:13:44,697 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 16:13:44,697 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 16:13:44,697 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 16:13:44,697 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 14              | 2016-04-13 00:00:... | 2016-04-13 14:10:... |
2016-04-14 16:13:44,697 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 16:15:09,297 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 16:15:09,303 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 16:15:09,319 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 16:15:09,319 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 16:15:09,319 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 16:15:09,319 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 16:15:09,320 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 16:15:09,321 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 16:15:09,322 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 16:15:09,324 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 16:15:09,383 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 16:15:09,464 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:15:09,559 [Bookstore-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 16:15:09,641 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 16:15:09,643 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 16:15:09,643 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 16:15:09,645 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 16:15:09,648 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 16:15:09,654 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 16:15:09,654 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 16:15:09,655 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 16:15:09,655 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 16:15:09,672 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 16:15:09,673 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 16:15:09,673 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 16:15:09,673 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 16:15:09,673 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 16:15:09,676 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 16:15:09,677 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 16:15:09,677 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 16:15:09,677 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 16:15:09,688 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 16:15:09,688 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 16:15:09,711 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0xf895a518768855c2 (took 1 ms)
2016-04-14 16:15:09,733 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 16:15:09,733 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 16:15:09,734 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 16:15:09,734 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 16:15:22,731 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 16:15:22,742 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 16:15:22,748 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 16:15:22,753 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 16:15:22,808 [Bookstore-akka.actor.default-dispatcher-4] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    lower(b.author) like ? group by b.id]
2016-04-14 16:15:22,818 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   lower(b.author) like ? group by b.id
2016-04-14 16:15:22,821 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 16:15:22,835 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 5ms
2016-04-14 16:15:22,853 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 16:15:22,854 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 16:15:22,854 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 16:15:22,854 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 16:15:22,854 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 2  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 0               | 2016-04-13 00:00:... | 2016-04-13 20:28:... |
2016-04-14 16:15:22,854 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 14              | 2016-04-13 00:00:... | 2016-04-13 14:10:... |
2016-04-14 16:15:22,854 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 16:15:39,335 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:15:39,335 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:16:09,333 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:16:09,334 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:16:39,332 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:16:39,332 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:17:00,241 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 16:17:00,249 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 16:17:00,267 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 16:17:00,268 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 16:17:00,269 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 16:17:00,270 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 16:17:00,271 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 16:17:00,271 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 16:17:00,271 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 16:17:00,271 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 16:17:00,273 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 16:17:00,328 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 16:17:00,401 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:17:00,506 [Bookstore-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 16:17:00,596 [Bookstore-akka.actor.default-dispatcher-2] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 16:17:00,598 [Bookstore-akka.actor.default-dispatcher-2] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 16:17:00,598 [Bookstore-akka.actor.default-dispatcher-2] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 16:17:00,600 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 16:17:00,603 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 16:17:00,609 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 16:17:00,609 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 16:17:00,609 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 16:17:00,610 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 16:17:00,626 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 16:17:00,627 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 16:17:00,627 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 16:17:00,627 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 16:17:00,627 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 16:17:00,630 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 16:17:00,630 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 16:17:00,631 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 16:17:00,631 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 16:17:00,642 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 16:17:00,642 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 16:17:00,664 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x0a5ce3e6eed380d2 (took 1 ms)
2016-04-14 16:17:00,683 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 16:17:00,683 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 16:17:00,685 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 16:17:00,685 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 16:17:29,947 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 16:17:29,961 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 16:17:29,967 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 16:17:29,972 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 16:17:30,016 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select bookId, count(bookId) from BookTag where lower(tag) in ('fiction') group by bookId having count(bookId) = ?]
2016-04-14 16:17:30,026 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select bookId, count(bookId) from BookTag where lower(tag) in ('fiction') group by bookId having count(bookId) = ?
2016-04-14 16:17:30,029 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 16:17:30,039 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /--------+-------\
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1      | 2     |
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | bookid | count |
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |--------+-------|
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1      | 1     |
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 2      | 1     |
2016-04-14 16:17:30,061 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \--------+-------/
2016-04-14 16:17:30,072 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (1,2) group by b.id]
2016-04-14 16:17:30,072 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (1,2) group by b.id
2016-04-14 16:17:30,075 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 1ms
2016-04-14 16:17:30,079 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 16:17:30,079 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 16:17:30,079 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 16:17:30,080 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 16:17:30,080 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 14              | 2016-04-13 00:00:... | 2016-04-13 14:10:... |
2016-04-14 16:17:30,080 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 2  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 0               | 2016-04-13 00:00:... | 2016-04-13 20:28:... |
2016-04-14 16:17:30,080 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 16:17:30,283 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:17:30,283 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:18:00,282 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:18:00,282 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:18:30,280 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:18:30,281 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:19:00,279 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:19:00,280 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:19:30,278 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:19:30,278 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:20:00,276 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:20:00,276 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:20:30,275 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:20:30,276 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:21:00,275 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:21:00,275 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:21:30,273 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:21:30,273 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:22:00,272 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:22:00,272 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:22:30,271 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:22:30,271 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:22:46,010 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 16:22:46,015 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 16:22:46,030 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 16:22:46,031 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 16:22:46,032 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 16:22:46,033 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 16:22:46,035 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 16:22:46,093 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 16:22:46,164 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:22:46,261 [Bookstore-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 16:22:46,353 [Bookstore-akka.actor.default-dispatcher-2] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 16:22:46,355 [Bookstore-akka.actor.default-dispatcher-2] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 16:22:46,355 [Bookstore-akka.actor.default-dispatcher-2] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 16:22:46,358 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 16:22:46,363 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 16:22:46,370 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 16:22:46,371 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 16:22:46,371 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 16:22:46,371 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 16:22:46,395 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 16:22:46,395 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 16:22:46,395 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 16:22:46,395 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 16:22:46,396 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 16:22:46,399 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 16:22:46,399 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 16:22:46,399 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 16:22:46,399 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 16:22:46,411 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 16:22:46,412 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 16:22:46,446 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x9e757c7a46148593 (took 1 ms)
2016-04-14 16:22:46,470 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 16:22:46,470 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 16:22:46,472 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 16:22:46,472 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 16:23:02,210 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 16:23:02,222 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 16:23:02,228 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 16:23:02,232 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 16:23:02,272 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (2) group by b.id]
2016-04-14 16:23:02,282 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (2) group by b.id
2016-04-14 16:23:02,285 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 16:23:02,295 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 3ms
2016-04-14 16:23:02,316 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 16:23:02,316 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 16:23:02,316 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 16:23:02,316 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 16:23:02,316 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 2  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 0               | 2016-04-13 00:00:... | 2016-04-13 20:28:... |
2016-04-14 16:23:02,316 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 16:23:02,329 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingInvokerAction$HeadAction [delete from Book where id = ?]
2016-04-14 16:23:02,330 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: delete from Book where id = ?
2016-04-14 16:24:29,720 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 16:24:29,726 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 16:24:29,743 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 16:24:29,743 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 16:24:29,743 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 16:24:29,743 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 16:24:29,743 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 16:24:29,744 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 16:24:29,745 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 16:24:29,746 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 16:24:29,746 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 16:24:29,746 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 16:24:29,746 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 16:24:29,746 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 16:24:29,746 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 16:24:29,748 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 16:24:29,811 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 16:24:29,880 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:24:29,982 [Bookstore-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 16:24:30,069 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 16:24:30,072 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 16:24:30,072 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 16:24:30,074 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 16:24:30,078 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 16:24:30,084 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 16:24:30,084 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 16:24:30,085 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 16:24:30,085 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 16:24:30,103 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 16:24:30,104 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 16:24:30,104 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 16:24:30,104 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 16:24:30,104 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 16:24:30,107 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 16:24:30,108 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 16:24:30,108 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 16:24:30,108 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 16:24:30,124 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 16:24:30,125 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 16:24:30,154 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0xbd550056063ed86b (took 1 ms)
2016-04-14 16:24:30,177 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 16:24:30,177 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 16:24:30,179 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 16:24:30,179 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 16:24:32,117 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 16:24:32,129 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 16:24:32,135 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 16:24:32,140 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 16:24:32,178 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (2) group by b.id]
2016-04-14 16:24:32,189 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (2) group by b.id
2016-04-14 16:24:32,192 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 16:24:32,201 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 16:24:32,221 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 16:24:32,221 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 16:24:32,221 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 16:24:32,221 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 16:24:32,221 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 2  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 0               | 2016-04-13 00:00:... | 2016-04-13 20:28:... |
2016-04-14 16:24:32,221 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 16:24:32,239 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: [fused] cleanUp
      try: andThen
        1: StartTransaction
        2: StreamingInvokerAction$HeadAction [delete from BookTag where bookId = ?]
        3: StreamingInvokerAction$HeadAction [delete from Book where id = ?]
2016-04-14 16:24:32,240 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: delete from BookTag where bookId = ?
2016-04-14 16:24:32,243 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 1ms
2016-04-14 16:24:32,244 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - 2 rows affected
2016-04-14 16:24:32,246 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: delete from Book where id = ?
2016-04-14 16:24:32,247 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 1ms
2016-04-14 16:24:32,247 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 16:24:38,362 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select bookId, count(bookId) from BookTag where lower(tag) in ('fiction') group by bookId having count(bookId) = ?]
2016-04-14 16:24:38,362 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select bookId, count(bookId) from BookTag where lower(tag) in ('fiction') group by bookId having count(bookId) = ?
2016-04-14 16:24:38,363 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 644µs
2016-04-14 16:24:38,371 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - /--------+-------\
2016-04-14 16:24:38,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1      | 2     |
2016-04-14 16:24:38,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | bookid | count |
2016-04-14 16:24:38,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - |--------+-------|
2016-04-14 16:24:38,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1      | 1     |
2016-04-14 16:24:38,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - \--------+-------/
2016-04-14 16:24:38,373 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (1) group by b.id]
2016-04-14 16:24:38,373 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (1) group by b.id
2016-04-14 16:24:38,374 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 758µs
2016-04-14 16:24:38,375 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 16:24:38,375 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 16:24:38,375 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 16:24:38,375 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 16:24:38,375 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 14              | 2016-04-13 00:00:... | 2016-04-13 14:10:... |
2016-04-14 16:24:38,376 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 16:24:59,761 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 16:24:59,761 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:40:47,983 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 19:40:47,989 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 19:40:48,006 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 19:40:48,006 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 19:40:48,006 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 19:40:48,006 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 19:40:48,006 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 19:40:48,007 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 19:40:48,008 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 19:40:48,010 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 19:40:48,011 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 19:40:48,012 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 19:40:48,012 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 19:40:48,012 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 19:40:48,012 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 19:40:48,012 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 19:40:48,015 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 19:40:48,086 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 19:40:48,154 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:40:48,294 [Bookstore-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 19:40:48,404 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 19:40:48,406 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 19:40:48,406 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 19:40:48,412 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 19:40:48,419 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 19:40:48,433 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 19:40:48,433 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 19:40:48,433 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 19:40:48,434 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 19:40:48,460 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 19:40:48,461 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 19:40:48,461 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 19:40:48,461 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 19:40:48,461 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 19:40:48,465 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 19:40:48,466 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 19:40:48,466 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 19:40:48,466 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 19:40:48,484 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 19:40:48,485 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 19:40:48,518 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x4fc8a9d2d5bdca0d (took 1 ms)
2016-04-14 19:40:48,551 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 19:40:48,551 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 19:40:48,553 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 19:40:48,553 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 19:40:59,518 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 19:40:59,536 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 19:40:59,542 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 19:40:59,547 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 19:40:59,592 [Bookstore-akka.actor.default-dispatcher-4] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?]
2016-04-14 19:40:59,607 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?
2016-04-14 19:40:59,610 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 19:40:59,623 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 19:40:59,640 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:40:59,640 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:40:59,640 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:40:59,640 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:40:59,640 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 19:41:13,856 [Bookstore-akka.actor.default-dispatcher-4] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?]
2016-04-14 19:41:13,856 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?
2016-04-14 19:41:13,857 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 363µs
2016-04-14 19:41:13,858 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:41:13,858 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:41:13,858 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:41:13,858 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:41:13,858 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 19:41:18,029 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:41:18,030 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:41:40,909 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 19:41:40,916 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 19:41:40,935 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 19:41:40,936 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 19:41:40,937 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 19:41:40,938 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 19:41:40,940 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 19:41:40,998 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 19:41:41,066 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:41:41,167 [Bookstore-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 19:41:41,246 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 19:41:41,247 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 19:41:41,247 [Bookstore-akka.actor.default-dispatcher-4] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 19:41:41,249 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 19:41:41,252 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 19:41:41,258 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 19:41:41,258 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 19:41:41,258 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 19:41:41,259 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 19:41:41,275 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 19:41:41,275 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 19:41:41,275 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 19:41:41,276 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 19:41:41,276 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 19:41:41,279 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 19:41:41,279 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 19:41:41,279 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 19:41:41,279 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 19:41:41,290 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 19:41:41,290 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 19:41:41,311 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x25b84e22fc89cddf (took 1 ms)
2016-04-14 19:41:41,333 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 19:41:41,334 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 19:41:41,335 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 19:41:41,335 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 19:41:44,744 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 19:41:44,756 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 19:41:44,762 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 19:41:44,766 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 19:41:44,806 [Bookstore-akka.actor.default-dispatcher-4] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?]
2016-04-14 19:41:44,816 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?
2016-04-14 19:41:44,820 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 19:41:44,830 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 1ms
2016-04-14 19:41:44,844 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:41:44,844 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:41:44,844 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:41:44,844 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:41:44,844 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 19:42:03,234 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 19:42:03,241 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 19:42:03,262 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 19:42:03,262 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 19:42:03,262 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 19:42:03,263 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 19:42:03,264 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 19:42:03,265 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 19:42:03,267 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 19:42:03,328 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 19:42:03,400 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:42:03,511 [Bookstore-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 19:42:03,593 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 19:42:03,595 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 19:42:03,595 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 19:42:03,597 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 19:42:03,599 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 19:42:03,605 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 19:42:03,605 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 19:42:03,605 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 19:42:03,606 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 19:42:03,623 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 19:42:03,624 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 19:42:03,624 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 19:42:03,624 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 19:42:03,624 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 19:42:03,627 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 19:42:03,628 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 19:42:03,628 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 19:42:03,628 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 19:42:03,639 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 19:42:03,639 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 19:42:03,662 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0xb1f3007b1979153f (took 1 ms)
2016-04-14 19:42:03,682 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 19:42:03,682 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 19:42:03,683 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 19:42:03,684 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 19:42:08,555 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 19:42:08,567 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 19:42:08,572 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 19:42:08,576 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 19:42:08,619 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (12) group by b.id]
2016-04-14 19:42:08,629 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (12) group by b.id
2016-04-14 19:42:08,632 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 19:42:08,664 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 25ms
2016-04-14 19:42:08,680 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-------+--------+------+------+-----------------+----------+----------\
2016-04-14 19:42:08,680 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2     | 3      | 4    | 5    | 6               | 7        | 8        |
2016-04-14 19:42:08,680 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | title | author | tags | cost | inventoryamount | createts | modifyts |
2016-04-14 19:42:08,680 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-------+--------+------+------+-----------------+----------+----------|
2016-04-14 19:42:08,680 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-------+--------+------+------+-----------------+----------+----------/
2016-04-14 19:42:33,280 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:42:33,281 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:43:02,566 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?]
2016-04-14 19:43:02,566 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?
2016-04-14 19:43:02,582 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 13ms
2016-04-14 19:43:02,583 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:43:02,583 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:43:02,583 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:43:02,583 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:43:02,583 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 19:43:02,594 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: [fused] cleanUp
      try: andThen
        1: SynchronousDatabaseAction.Pin
        2: : StreamingInvokerAction$HeadAction 
           : [
           :       insert into StoreUser (firstName, lastName, email, createTs, modifyTs) 
           :       values (?, ?, ?, ?, ?)
           :     ]
        3: StreamingResultAction [select currval('storeuser_id_seq')]
2016-04-14 19:43:02,595 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
      insert into StoreUser (firstName, lastName, email, createTs, modifyTs) 
      values (?, ?, ?, ?, ?)
    
2016-04-14 19:43:02,637 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 39ms
2016-04-14 19:43:02,638 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 19:43:02,641 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select currval('storeuser_id_seq')
2016-04-14 19:43:02,653 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 11ms
2016-04-14 19:43:02,656 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - /---------\
2016-04-14 19:43:02,656 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 19:43:02,656 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | currval |
2016-04-14 19:43:02,656 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - |---------|
2016-04-14 19:43:02,656 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 2       |
2016-04-14 19:43:02,656 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - \---------/
2016-04-14 19:43:03,279 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:43:03,279 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:43:11,753 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?]
2016-04-14 19:43:11,754 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ?
2016-04-14 19:43:11,757 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 1ms
2016-04-14 19:43:11,759 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 19:43:11,759 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 19:43:11,759 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 19:43:11,759 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 19:43:11,759 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | 2  | Chris     | Baxter   | chris@masteringak... | 2016-04-14 00:00:... | 2016-04-14 00:00:... |
2016-04-14 19:43:11,759 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
2016-04-14 19:43:11,761 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingInvokerAction$HeadAction [delete from StoreUser where id = ?]
2016-04-14 19:43:11,761 [psqldb-5] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: delete from StoreUser where id = ?
2016-04-14 19:43:11,790 [psqldb-5] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 28ms
2016-04-14 19:43:11,790 [psqldb-5] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 19:45:46,848 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 19:45:46,854 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 19:45:46,871 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 19:45:46,872 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 19:45:46,873 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 19:45:46,874 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 19:45:46,874 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 19:45:46,874 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 19:45:46,874 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 19:45:46,876 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 19:45:46,928 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 19:45:46,998 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:45:47,104 [Bookstore-akka.actor.default-dispatcher-2] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 19:45:47,185 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 19:45:47,186 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 19:45:47,187 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 19:45:47,188 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 19:45:47,191 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 19:45:47,197 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 19:45:47,198 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 19:45:47,198 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 19:45:47,198 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 19:45:47,215 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 19:45:47,216 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 19:45:47,216 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 19:45:47,216 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 19:45:47,216 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 19:45:47,219 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 19:45:47,219 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 19:45:47,219 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 19:45:47,219 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 19:45:47,231 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 19:45:47,231 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 19:45:47,252 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x4029722f92fd8e7a (took 1 ms)
2016-04-14 19:45:47,275 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 19:45:47,275 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 19:45:47,277 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 19:45:47,277 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 19:46:03,339 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 19:46:03,353 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 19:46:03,361 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 19:46:03,365 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 19:46:03,413 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?]
2016-04-14 19:46:03,425 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?
2016-04-14 19:46:03,427 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 19:46:03,443 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 19:46:03,458 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:46:03,458 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:46:03,458 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:46:03,458 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:46:03,458 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 19:46:11,585 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?]
2016-04-14 19:46:11,585 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ?
2016-04-14 19:46:11,586 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 455µs
2016-04-14 19:46:11,592 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 19:46:11,593 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 19:46:11,593 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 19:46:11,593 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 19:46:11,593 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1  | Chris     | Baxter   | chris@changedemai... | 2016-04-13 00:00:... | 2016-04-13 00:00:... |
2016-04-14 19:46:11,593 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
2016-04-14 19:46:16,887 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:46:16,887 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:46:46,885 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:46:46,885 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:47:16,884 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:47:16,884 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:47:46,883 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:47:46,883 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:48:16,881 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:48:16,882 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:48:46,881 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:48:46,881 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:49:16,880 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:49:16,880 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:49:46,879 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:49:46,879 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:50:16,877 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:50:16,878 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:50:46,876 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:50:46,877 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:51:16,875 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:51:16,875 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:51:46,874 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:51:46,874 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:52:16,873 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:52:16,873 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:52:46,872 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:52:46,872 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:53:16,871 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:53:16,871 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:59:06,642 [main] WARN  com.zaxxer.hikari.HikariConfig - The jdbcConnectionTest property is now deprecated, see the documentation for connectionTestQuery
2016-04-14 19:59:06,647 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariCP pool psqldb configuration:
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension.............false
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit......................true
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog.........................
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizer............com.zaxxer.hikari.AbstractHikariConfig$1@3427b02d
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionCustomizerClassName...
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql...............
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery.............select 1
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout...............1000
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource......................
2016-04-14 19:59:06,665 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName.............
2016-04-14 19:59:06,666 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI..................
2016-04-14 19:59:06,666 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties............{password=<masked>}
2016-04-14 19:59:06,666 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName.................org.postgresql.Driver
2016-04-14 19:59:06,666 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties...........{}
2016-04-14 19:59:06,666 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry.............
2016-04-14 19:59:06,666 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout.....................600000
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailFast..........false
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries..........false
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbc4ConnectionTest.............false
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl.........................jdbc:postgresql://localhost:5432/akkaexampleapp
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold..........0
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime.....................1800000
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize.................50
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry..................
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle.....................10
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - password........................<masked>
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName........................psqldb
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly........................false
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans..................false
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory...................
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation............
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - username........................root
2016-04-14 19:59:06,667 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout...............1000
2016-04-14 19:59:06,669 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariCP pool psqldb is starting.
2016-04-14 19:59:06,730 [HikariCP connection filler (pool psqldb)] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Connection.setNetworkTimeout() not supported
2016-04-14 19:59:06,817 [HikariCP connection filler (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After fill pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:59:06,932 [Bookstore-akka.actor.default-dispatcher-3] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
2016-04-14 19:59:07,019 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.order.SalesOrderEndpoint@53045c6c
2016-04-14 19:59:07,020 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.user.UserEndpoint@cb0755b
2016-04-14 19:59:07,021 [Bookstore-akka.actor.default-dispatcher-3] INFO  Server - Adding endpoint: com.packt.masteringakka.bookstore.book.BookEndpoint@33065d67
2016-04-14 19:59:07,022 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework
2016-04-14 19:59:07,026 [main] DEBUG i.n.c.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16
2016-04-14 19:59:07,033 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Buffer.address: available
2016-04-14 19:59:07,033 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
2016-04-14 19:59:07,033 [main] DEBUG i.n.u.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
2016-04-14 19:59:07,033 [main] DEBUG i.n.u.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
2016-04-14 19:59:07,053 [main] DEBUG i.n.util.internal.PlatformDependent - UID: 501
2016-04-14 19:59:07,053 [main] DEBUG i.n.util.internal.PlatformDependent - Java version: 8
2016-04-14 19:59:07,053 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
2016-04-14 19:59:07,053 [main] DEBUG i.n.util.internal.PlatformDependent - sun.misc.Unsafe: available
2016-04-14 19:59:07,054 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
2016-04-14 19:59:07,057 [main] DEBUG i.n.util.internal.PlatformDependent - Javassist: available
2016-04-14 19:59:07,057 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/7q/8kqdnsxx35765lcgbqk6_23r0000gn/T (java.io.tmpdir)
2016-04-14 19:59:07,058 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2016-04-14 19:59:07,058 [main] DEBUG i.n.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
2016-04-14 19:59:07,070 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false
2016-04-14 19:59:07,071 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512
2016-04-14 19:59:07,093 [main] DEBUG i.n.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0x6c48352d9b81891c (took 1 ms)
2016-04-14 19:59:07,113 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: unpooled
2016-04-14 19:59:07,113 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 65536
2016-04-14 19:59:07,115 [main] DEBUG io.netty.util.NetUtil - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1)
2016-04-14 19:59:07,115 [main] DEBUG io.netty.util.NetUtil - /proc/sys/net/core/somaxconn: 128 (non-existent)
2016-04-14 19:59:24,023 [nioEventLoopGroup-3-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetectionLevel: simple
2016-04-14 19:59:24,035 [nioEventLoopGroup-3-1] DEBUG i.n.u.i.JavassistTypeParameterMatcherGenerator - Generated: io.netty.util.internal.__matchers__.io.netty.handler.codec.http.HttpObjectMatcher
2016-04-14 19:59:24,041 [nioEventLoopGroup-3-1] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacity.default: 262144
2016-04-14 19:59:24,134 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ? and not deleted]
2016-04-14 19:59:24,145 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ? and not deleted
2016-04-14 19:59:24,148 [psqldb-1] DEBUG c.zaxxer.hikari.pool.PoolUtilities - psqldb - Statement.setQueryTimeout() not supported
2016-04-14 19:59:24,159 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 3ms
2016-04-14 19:59:24,175 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:59:24,175 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:59:24,175 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:59:24,175 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:59:24,175 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 19:59:24,195 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: [fused] cleanUp
      try: andThen
        1: SynchronousDatabaseAction.Pin
        2: : StreamingInvokerAction$HeadAction 
           : [
           :       insert into StoreUser (firstName, lastName, email, createTs, modifyTs) 
           :       values (?, ?, ?, ?, ?)
           :     ]
        3: StreamingResultAction [select currval('storeuser_id_seq')]
2016-04-14 19:59:24,196 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
      insert into StoreUser (firstName, lastName, email, createTs, modifyTs) 
      values (?, ?, ?, ?, ?)
    
2016-04-14 19:59:24,200 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 19:59:24,201 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 19:59:24,203 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select currval('storeuser_id_seq')
2016-04-14 19:59:24,204 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 622µs
2016-04-14 19:59:24,206 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /---------\
2016-04-14 19:59:24,206 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 19:59:24,206 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | currval |
2016-04-14 19:59:24,206 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |---------|
2016-04-14 19:59:24,206 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 19:59:24,206 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \---------/
2016-04-14 19:59:24,362 [nioEventLoopGroup-3-1] DEBUG io.netty.util.internal.Cleaner0 - java.nio.ByteBuffer.cleaner(): available
2016-04-14 19:59:36,679 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:59:36,679 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 19:59:37,367 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ? and not deleted]
2016-04-14 19:59:37,368 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ? and not deleted
2016-04-14 19:59:37,370 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 491µs
2016-04-14 19:59:37,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 19:59:37,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 19:59:37,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 19:59:37,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 19:59:37,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1  | Chris     | Baxter   | chris@masteringak... | 2016-04-14 00:00:... | 2016-04-14 00:00:... |
2016-04-14 19:59:37,372 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
2016-04-14 19:59:37,373 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingInvokerAction$HeadAction [delete from StoreUser where id = ?]
2016-04-14 19:59:37,374 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: delete from StoreUser where id = ?
2016-04-14 19:59:37,377 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 19:59:37,377 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 19:59:46,405 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ? and not deleted]
2016-04-14 19:59:46,405 [psqldb-5] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where id = ? and not deleted
2016-04-14 19:59:46,406 [psqldb-5] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 374µs
2016-04-14 19:59:46,407 [psqldb-5] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 19:59:46,407 [psqldb-5] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 19:59:46,407 [psqldb-5] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 19:59:46,407 [psqldb-5] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 19:59:46,407 [psqldb-5] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 20:00:06,677 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 20:00:06,678 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 20:00:16,958 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StartTransaction
2016-04-14 20:00:16,959 [psqldb-6] DEBUG s.backend.DatabaseComponent.action - #2: : StreamingInvokerAction$HeadAction 
    : [
    :         insert into Book (title, author, cost, inventoryamount, createts) 
    :         values (?, ?, ?, ?, ?)
    :       ]
2016-04-14 20:00:16,959 [psqldb-7] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
        insert into Book (title, author, cost, inventoryamount, createts) 
        values (?, ?, ?, ?, ?)
      
2016-04-14 20:00:16,976 [psqldb-7] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 14ms
2016-04-14 20:00:16,976 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:16,977 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #3: StreamingResultAction [select currval('book_id_seq')]
2016-04-14 20:00:16,978 [psqldb-8] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select currval('book_id_seq')
2016-04-14 20:00:16,978 [psqldb-8] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 377µs
2016-04-14 20:00:16,979 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - /---------\
2016-04-14 20:00:16,979 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 20:00:16,979 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - | currval |
2016-04-14 20:00:16,979 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - |---------|
2016-04-14 20:00:16,979 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 20:00:16,979 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - \---------/
2016-04-14 20:00:16,980 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #4: success Vector(1)
2016-04-14 20:00:16,984 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #5: [fused] sequence
      1: StreamingInvokerAction$HeadAction [insert into BookTag (bookid, tag) values (?, ?)]
      2: StreamingInvokerAction$HeadAction [insert into BookTag (bookid, tag) values (?, ?)]
2016-04-14 20:00:16,985 [psqldb-9] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: insert into BookTag (bookid, tag) values (?, ?)
2016-04-14 20:00:16,986 [psqldb-9] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 956µs
2016-04-14 20:00:16,986 [psqldb-9] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:16,986 [psqldb-9] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: insert into BookTag (bookid, tag) values (?, ?)
2016-04-14 20:00:16,987 [psqldb-9] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 394µs
2016-04-14 20:00:16,987 [psqldb-9] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:16,987 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #6: success Book(1,20000 Leagues Under the Sea,Jules Verne,List(fiction, scifi),19.99,0,Thu Apr 14 20:00:16 EDT 2016,Thu Apr 14 20:00:16 EDT 2016,false)
2016-04-14 20:00:16,988 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #7: Commit
2016-04-14 20:00:28,893 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (1) and not b.deleted group by b.id]
2016-04-14 20:00:28,895 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (1) and not b.deleted group by b.id
2016-04-14 20:00:28,904 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 7ms
2016-04-14 20:00:28,907 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 20:00:28,907 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 20:00:28,907 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 20:00:28,907 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 20:00:28,907 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 0               | 2016-04-14 00:00:... | 2016-04-14 20:00:... |
2016-04-14 20:00:28,907 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 20:00:28,909 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: StreamingInvokerAction$HeadAction [update Book set deleted = true where id = ?]
2016-04-14 20:00:28,909 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: update Book set deleted = true where id = ?
2016-04-14 20:00:28,915 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 6ms
2016-04-14 20:00:28,915 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:35,487 [Bookstore-akka.actor.default-dispatcher-3] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    b.id in (1) and not b.deleted group by b.id]
2016-04-14 20:00:35,487 [Bookstore-akka.actor.default-dispatcher-2] INFO  c.p.m.bookstore.book.BookManager - Looking up book for id: 1
2016-04-14 20:00:35,487 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   b.id in (1) and not b.deleted group by b.id
2016-04-14 20:00:35,488 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 600µs
2016-04-14 20:00:35,489 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - /----+-------+--------+------+------+-----------------+----------+----------\
2016-04-14 20:00:35,489 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2     | 3      | 4    | 5    | 6               | 7        | 8        |
2016-04-14 20:00:35,489 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | id | title | author | tags | cost | inventoryamount | createts | modifyts |
2016-04-14 20:00:35,489 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - |----+-------+--------+------+------+-----------------+----------+----------|
2016-04-14 20:00:35,489 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - \----+-------+--------+------+------+-----------------+----------+----------/
2016-04-14 20:00:36,676 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 20:00:36,676 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 20:00:42,571 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    lower(b.author) like ? and not b.deleted group by b.id]
2016-04-14 20:00:42,571 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   lower(b.author) like ? and not b.deleted group by b.id
2016-04-14 20:00:42,572 [psqldb-4] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 804µs
2016-04-14 20:00:42,573 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - /----+-------+--------+------+------+-----------------+----------+----------\
2016-04-14 20:00:42,573 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2     | 3      | 4    | 5    | 6               | 7        | 8        |
2016-04-14 20:00:42,573 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - | id | title | author | tags | cost | inventoryamount | createts | modifyts |
2016-04-14 20:00:42,573 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - |----+-------+--------+------+------+-----------------+----------+----------|
2016-04-14 20:00:42,573 [psqldb-4] DEBUG slick.jdbc.StatementInvoker.result - \----+-------+--------+------+------+-----------------+----------+----------/
2016-04-14 20:00:50,647 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StartTransaction
2016-04-14 20:00:50,648 [psqldb-5] DEBUG s.backend.DatabaseComponent.action - #2: : StreamingInvokerAction$HeadAction 
    : [
    :         insert into Book (title, author, cost, inventoryamount, createts) 
    :         values (?, ?, ?, ?, ?)
    :       ]
2016-04-14 20:00:50,648 [psqldb-6] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
        insert into Book (title, author, cost, inventoryamount, createts) 
        values (?, ?, ?, ?, ?)
      
2016-04-14 20:00:50,649 [psqldb-6] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 499µs
2016-04-14 20:00:50,649 [psqldb-6] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:50,649 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #3: StreamingResultAction [select currval('book_id_seq')]
2016-04-14 20:00:50,649 [psqldb-7] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select currval('book_id_seq')
2016-04-14 20:00:50,649 [psqldb-7] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 189µs
2016-04-14 20:00:50,650 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - /---------\
2016-04-14 20:00:50,650 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 20:00:50,650 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - | currval |
2016-04-14 20:00:50,650 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - |---------|
2016-04-14 20:00:50,650 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - | 2       |
2016-04-14 20:00:50,650 [psqldb-7] DEBUG slick.jdbc.StatementInvoker.result - \---------/
2016-04-14 20:00:50,650 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #4: success Vector(2)
2016-04-14 20:00:50,651 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #5: [fused] sequence
      1: StreamingInvokerAction$HeadAction [insert into BookTag (bookid, tag) values (?, ?)]
      2: StreamingInvokerAction$HeadAction [insert into BookTag (bookid, tag) values (?, ?)]
2016-04-14 20:00:50,651 [psqldb-8] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: insert into BookTag (bookid, tag) values (?, ?)
2016-04-14 20:00:50,651 [psqldb-8] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 406µs
2016-04-14 20:00:50,651 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:50,651 [psqldb-8] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: insert into BookTag (bookid, tag) values (?, ?)
2016-04-14 20:00:50,652 [psqldb-8] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 343µs
2016-04-14 20:00:50,652 [psqldb-8] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:00:50,652 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #6: success Book(2,20000 Leagues Under the Sea,Jules Verne,List(fiction, scifi),19.99,0,Thu Apr 14 20:00:50 EDT 2016,Thu Apr 14 20:00:50 EDT 2016,false)
2016-04-14 20:00:50,652 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #7: Commit
2016-04-14 20:00:52,679 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: : StreamingResultAction 
    : [
    :     select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    :     from Book b left join BookTag t on b.id = t.bookId where
    :    lower(b.author) like ? and not b.deleted group by b.id]
2016-04-14 20:00:52,679 [psqldb-10] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
    select b.id, b.title, b.author, array_to_string(array_agg(t.tag), ',') as tags, b.cost, b.inventoryAmount, b.createTs, b.modifyTs
    from Book b left join BookTag t on b.id = t.bookId where
   lower(b.author) like ? and not b.deleted group by b.id
2016-04-14 20:00:52,682 [psqldb-10] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 20:00:52,683 [psqldb-10] DEBUG slick.jdbc.StatementInvoker.result - /----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------\
2016-04-14 20:00:52,684 [psqldb-10] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2                    | 3           | 4             | 5     | 6               | 7                    | 8                    |
2016-04-14 20:00:52,684 [psqldb-10] DEBUG slick.jdbc.StatementInvoker.result - | id | title                | author      | tags          | cost  | inventoryamount | createts             | modifyts             |
2016-04-14 20:00:52,684 [psqldb-10] DEBUG slick.jdbc.StatementInvoker.result - |----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------|
2016-04-14 20:00:52,684 [psqldb-10] DEBUG slick.jdbc.StatementInvoker.result - | 2  | 20000 Leagues Und... | Jules Verne | fiction,scifi | 19.99 | 0               | 2016-04-14 00:00:... | 2016-04-14 20:00:... |
2016-04-14 20:00:52,684 [psqldb-10] DEBUG slick.jdbc.StatementInvoker.result - \----+----------------------+-------------+---------------+-------+-----------------+----------------------+----------------------/
2016-04-14 20:01:02,048 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ? and not deleted]
2016-04-14 20:01:02,048 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ? and not deleted
2016-04-14 20:01:02,049 [psqldb-1] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 333µs
2016-04-14 20:01:02,049 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+-------+----------+----------\
2016-04-14 20:01:02,049 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4     | 5        | 6        |
2016-04-14 20:01:02,049 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email | createts | modifyts |
2016-04-14 20:01:02,049 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+-------+----------+----------|
2016-04-14 20:01:02,050 [psqldb-1] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+-------+----------+----------/
2016-04-14 20:01:02,050 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: [fused] cleanUp
      try: andThen
        1: SynchronousDatabaseAction.Pin
        2: : StreamingInvokerAction$HeadAction 
           : [
           :       insert into StoreUser (firstName, lastName, email, createTs, modifyTs) 
           :       values (?, ?, ?, ?, ?)
           :     ]
        3: StreamingResultAction [select currval('storeuser_id_seq')]
2016-04-14 20:01:02,050 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: 
      insert into StoreUser (firstName, lastName, email, createTs, modifyTs) 
      values (?, ?, ?, ?, ?)
    
2016-04-14 20:01:02,053 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 2ms
2016-04-14 20:01:02,053 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - 1 rows affected
2016-04-14 20:01:02,053 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select currval('storeuser_id_seq')
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 383µs
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - /---------\
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 1       |
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | currval |
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - |---------|
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - | 2       |
2016-04-14 20:01:02,054 [psqldb-2] DEBUG slick.jdbc.StatementInvoker.result - \---------/
2016-04-14 20:01:06,675 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - Before cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 20:01:06,676 [Hikari Housekeeping Timer (pool psqldb)] DEBUG com.zaxxer.hikari.pool.HikariPool - After cleanup pool stats psqldb (total=10, inUse=0, avail=10, waiting=0)
2016-04-14 20:01:19,661 [Bookstore-akka.actor.default-dispatcher-2] DEBUG s.backend.DatabaseComponent.action - #1: StreamingResultAction [select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ? and not deleted]
2016-04-14 20:01:19,661 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.statement - Preparing statement: select id, firstName, lastName, email, createTs, modifyTs from StoreUser  where email = ? and not deleted
2016-04-14 20:01:19,662 [psqldb-3] DEBUG slick.jdbc.JdbcBackend.benchmark - Execution of prepared statement took 354µs
2016-04-14 20:01:19,663 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - /----+-----------+----------+----------------------+----------------------+----------------------\
2016-04-14 20:01:19,663 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 1  | 2         | 3        | 4                    | 5                    | 6                    |
2016-04-14 20:01:19,663 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | id | firstname | lastname | email                | createts             | modifyts             |
2016-04-14 20:01:19,663 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - |----+-----------+----------+----------------------+----------------------+----------------------|
2016-04-14 20:01:19,663 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - | 2  | Chris     | Baxter   | chris@masteringak... | 2016-04-14 00:00:... | 2016-04-14 00:00:... |
2016-04-14 20:01:19,663 [psqldb-3] DEBUG slick.jdbc.StatementInvoker.result - \----+-----------+----------+----------------------+----------------------+----------------------/
